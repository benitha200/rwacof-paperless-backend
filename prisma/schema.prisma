generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique
  password       String
  firstName      String
  lastName       String
  role           String
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  shipments      Shipment[]
  preparedGRNs   Grns[]     @relation("PreparedGRNs")
  checkedGRNs    Grns[]     @relation("CheckedGRNs")
  authorizedGRNs Grns[]     @relation("AuthorizedGRNs")
  receivedGRNs   Grns[]     @relation("ReceivedGRNs")
}

model Shipment {
  id                Int      @id @default(autoincrement())
  containerNo       String
  truckNo           String
  lotNo             String
  description       String   @db.Text
  quantity          Int
  quantityUnit      String
  netWeight         Decimal  @db.Decimal(10, 2)
  netWeightUnit     String
  amount            Decimal  @db.Decimal(10, 2)
  price             Decimal  @db.Decimal(10, 2)
  consignee         String
  date              DateTime @default(now())
  status            String?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
  userId            Int
  user              User     @relation(fields: [userId], references: [id])
  loadingTallySheet LoadingTallySheet?
  invoice           Invoice?
  vgm               VGM?
  stuffingReport    StuffingReport?
}


model LoadingTallySheet {
  id           Int      @id @default(autoincrement())
  shipmentId   Int      @unique
  loadingDay   DateTime
  sl           String
  forwarder    String
  rssSsrwSprw  String
  plateNo      String
  tare         Decimal  @db.Decimal(10, 2)
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  shipment     Shipment @relation(fields: [shipmentId], references: [id])
}

model Invoice {
  id                 Int      @id @default(autoincrement())
  shipmentId         Int      @unique
  seller             String
  sellerAddress      String   @db.Text
  consignee          String
  consigneeAddress   String   @db.Text
  billOfLadingNo     String
  amountWords        String   @db.Text
  authorizedSignature String
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt
  shipment           Shipment @relation(fields: [shipmentId], references: [id])
}

model VGM {
  id               Int      @id @default(autoincrement())
  shipmentId       Int      @unique
  bookingBlNumber  String
  containerTypeSize String
  vgmKgs           Decimal  @db.Decimal(10, 2)
  cargoGwKgs       Decimal  @db.Decimal(10, 2)
  method           String
  remarks          String?  @db.Text
  vesselName       String
  voyageNumber     String
  authorizedPerson String
  position         String
  contactNumber    String
  signatureDate    DateTime
  kmaApprovalNo    String
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  shipment         Shipment @relation(fields: [shipmentId], references: [id])
}

model StuffingReport {
  id               Int      @id @default(autoincrement())
  shipmentId       Int      @unique
  client           String
  mandate          String   @db.Text
  product          String
  packing          String
  vesselName       String
  billOfLadingNo   String
  place            String
  stuffingStart    DateTime
  stuffingEnd      DateTime
  tempSealTime     DateTime
  finalSealTime    DateTime
  containerCondition String  @db.Text
  illyId           String
  authorizedPerson String
  signatureDate    DateTime
  createdAt        DateTime @default(now())
  updatedAt        DateTime @updatedAt
  shipment         Shipment @relation(fields: [shipmentId], references: [id])
}

model Container {
  id            Int      @id @default(autoincrement())
  containerNo   String   @unique
  type          String
  vgm           Float
  cargoWeight   Float
  tare          Float
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
}

model Grns {
  id                Int      @id @default(autoincrement())
  receivedDate      DateTime
  supplierName      String
  supplierAddress   String   @db.Text
  plate_no          String
  wbridgeRef        String?
  moisture          Decimal  @db.Decimal(10, 2)
  parch             Decimal? @db.Decimal(10, 2)
  coffee_type       String
  bags              Int
  quantity          Int
  totalWeight       Int
  weightUnit        String
  quantityUnit      String   @default("kgs")
  lessNoOfBags      Int?     @default(0)
  subGrossKg        Int
  lessMoistureKg    Int?     @default(0)
  lessQualityKg     Int?     @default(0)
  netWeightKg       Int
  cheque_in_favor_of String
  payment_weight    String
  payment_quantity  Int
  payment_rate      Int
  payment_amount    Int
  paymentDate       DateTime
  drAc              Int?
  qualityGrade      String
  rate              Int
  preparedById      Int
  preparedBy        User     @relation("PreparedGRNs", fields: [preparedById], references: [id])
  checkedById       Int?
  checkedBy         User?    @relation("CheckedGRNs", fields: [checkedById], references: [id])
  authorizedById    Int?
  authorizedBy      User?    @relation("AuthorizedGRNs", fields: [authorizedById], references: [id])
  receivedById      Int?
  receivedBy        User?    @relation("ReceivedGRNs", fields: [receivedById], references: [id])
  remarks           String?  @db.Text
  status            String   @default("Received")
  currentStep       Int
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt
}